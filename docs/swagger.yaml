definitions:
  types.ApiResponse:
    properties:
      data:
        type: object
      status:
        type: string
    type: object
  types.MinimalTaggedValidators:
    properties:
      index:
        type: integer
      pubKey:
        type: string
    type: object
  types.MobileSettingsData:
    properties:
      notify_token:
        type: string
    type: object
  utils.OAuthErrorResponse:
    properties:
      error:
        type: string
      error_description:
        type: string
    type: object
  utils.OAuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      token_type:
        type: string
    type: object
info:
  contact: {}
  description: |-
    High performance API for querying information from the Ethereum 2.0 beacon chain
    The API is currently free to use. A fair use policy applies. Calls are rate limited to
    10 requests / 1 minute / IP. All API results are cached for 1 minute.
    If you required a higher usage plan please checkout https://beaconcha.in/pricing.
  title: Beaconcha.in ETH2 API
  version: "1.0"
paths:
  /api/healthz:
    get:
      description: Health endpoint for montitoring if the explorer is in sync
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health of the explorer
      tags:
      - Health
  /api/v1/block/{slot}/attestations:
    get:
      description: Returns the attestations included in a specific block
      parameters:
      - description: Block slot
        in: path
        name: slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the attestations included in a specific block
      tags:
      - Block
  /api/v1/block/{slot}/attesterslashings:
    get:
      description: Returns the attester slashings included in a specific block
      parameters:
      - description: Block slot
        in: path
        name: slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the attester slashings included in a specific block
      tags:
      - Block
  /api/v1/block/{slot}/deposits:
    get:
      description: Returns the deposits included in a specific block
      parameters:
      - description: Block slot
        in: path
        name: slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the deposits included in a specific block
      tags:
      - Block
  /api/v1/block/{slot}/proposerslashings:
    get:
      description: Returns the proposer slashings included in a specific block
      parameters:
      - description: Block slot
        in: path
        name: slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the proposer slashings included in a specific block
      tags:
      - Block
  /api/v1/block/{slot}/voluntaryexits:
    get:
      description: Returns the voluntary exits included in a specific block
      parameters:
      - description: Block slot
        in: path
        name: slot
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the voluntary exits included in a specific block
      tags:
      - Block
  /api/v1/block/{slotOrHash}:
    get:
      description: Returns a block by its slot or root hash
      parameters:
      - description: Block slot or root hash or the string latest
        in: path
        name: slotOrHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get block
      tags:
      - Block
  /api/v1/chart/{chart}:
    get:
      parameters:
      - description: Chart name (see https://github.com/gobitfly/eth2-beaconchain-explorer/blob/master/services/charts_updater.go#L20 for all available names)
        in: path
        name: chart
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Returns charts from the page https://beaconcha.in/charts as PNG
      tags:
      - Charts
  /api/v1/epoch/{epoch}:
    get:
      description: Returns information for a specified epoch by the epoch number or the latest epoch
      parameters:
      - description: Epoch number or the string latest
        in: path
        name: epoch
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get epoch by number
      tags:
      - Epoch
  /api/v1/epoch/{epoch}/blocks:
    get:
      description: Returns all blocks for a specified epoch
      parameters:
      - description: Epoch number or the string latest
        in: path
        name: epoch
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get epoch blocks by epoch number
      tags:
      - Epoch
  /api/v1/eth1deposit/{txhash}:
    get:
      parameters:
      - description: Eth1 transaction hash
        in: path
        name: txhash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get an eth1 deposit by its eth1 transaction hash
      tags:
      - Eth1
  /api/v1/user/dashboard/save:
    post:
      parameters:
      - description: Your device`s firebase notification token
        in: body
        name: token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: Register or update your mobile notification token
      tags:
      - User
  /api/v1/user/mobile/settings:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/types.MobileSettingsData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: Get your device settings, currently only whether to enable mobile notifcations or not
      tags:
      - User
    post:
      parameters:
      - description: Whether to enable mobile notifications for this device or not
        in: body
        name: notify_enabled
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/types.MobileSettingsData'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: Changing your devices mobile settings
      tags:
      - User
  /api/v1/user/token:
    post:
      parameters:
      - description: grant_type use authorization_code for oauth code or refresh_token if you wish to refresh an token
        in: formData
        name: grant_type
        required: true
        type: string
      - description: Only required when using authorization_code grant type. Code received via oauth redirect_uri
        in: formData
        name: code
        type: string
      - description: Only required when using authorization_code grant type. Must match the redirect_uri from your oauth flow.
        in: formData
        name: redirect_uri
        type: string
      - description: Only required when using refresh_token grant type. The refresh_token you received during authorization_code flow.
        in: formData
        name: refresh_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.OAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.OAuthErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.OAuthErrorResponse'
      security:
      - OAuthAccessCode: []
      summary: Exchange your oauth code for an access token or refresh your access token
      tags:
      - User
  /api/v1/user/validator/{pubkey}/add:
    post:
      parameters:
      - description: Public Key of validator you want to subscribe to
        in: query
        name: pubKey
        required: true
        type: string
      - description: Submit \
        in: body
        name: balance_decreases
        schema:
          type: string
      - description: Submit \
        in: body
        name: validator_slashed
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: subscribes a user to get notifications from a specific validator
      tags:
      - User
  /api/v1/user/validator/{pubkey}/remove:
    post:
      parameters:
      - description: Public Key of validator you want to subscribe to
        in: query
        name: pubKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: unsubscribes a user from a specific validator
      tags:
      - User
  /api/v1/user/validator/saved:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/types.MinimalTaggedValidators'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ApiResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ApiResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all your tagged validators
      tags:
      - User
  /api/v1/validator/{indexOrPubkey}:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get up to 100 validators by their index
      tags:
      - Validator
  /api/v1/validator/{indexOrPubkey}/attestations:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all attestations during the last 100 epochs for up to 100 validators
      tags:
      - Validator
  /api/v1/validator/{indexOrPubkey}/balancehistory:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the balance history (last 100 epochs) of up to 100 validators
      tags:
      - Validator
  /api/v1/validator/{indexOrPubkey}/deposits:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all eth1 deposits for up to 100 validators
      tags:
      - Validator
  /api/v1/validator/{indexOrPubkey}/performance:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the current performance of up to 100 validators
      tags:
      - Validator
  /api/v1/validator/{indexOrPubkey}/proposals:
    get:
      parameters:
      - description: Up to 100 validator indicesOrPubkeys, comma separated
        in: path
        name: indexOrPubkey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all proposed blocks during the last 100 epochs for up to 100 validators
      tags:
      - Validator
  /api/v1/validator/eth1/{address}:
    get:
      parameters:
      - description: Eth1 address from which the validator deposits were sent
        in: path
        name: eth1address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get all validators that belong to an eth1 address
      tags:
      - Validator
  /api/v1/validator/leaderboard:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Get the current top 100 performing validators (using the income over the last 7 days)
      tags:
      - Validator
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  OAuthAccessCode:
    authorizationUrl: https://beaconcha.in/user/authorize
    flow: accessCode
    tokenUrl: https://beaconcha.in/user/token
    type: oauth2
swagger: "2.0"
