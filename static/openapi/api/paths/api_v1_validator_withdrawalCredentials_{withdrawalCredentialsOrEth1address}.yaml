get:
  tags:
    - Validators
  summary: Validators by withdrawal credentials or address
  description: >-
    Retrieve validators whose withdrawal credentials match the provided value, or
    whose credentials correspond to the provided execution-layer address. You can
    specify either a 32-byte withdrawal credentials value or a 0x-prefixed
    Ethereum address. When you provide an address, the service derives the
    corresponding withdrawal credentials (prefix 0x01) and returns validators
    whose credentials equal that value.

    ENS names are accepted for the address form when they resolve to a 0x-prefixed
    address at request time. The lookup is case-insensitive and accepts inputs
    with or without the 0x prefix.
  operationId: getValidatorsByWithdrawalCredentials
  parameters:
    - name: withdrawalCredentialsOrEth1address
      in: path
      description: >-
        Withdrawal credentials (32 bytes; 0x-prefixed hex) or an execution-layer
        address (0x-prefixed, 20-byte hex). ENS names are accepted for the
        address form.
      required: true
      style: simple
      explode: false
      schema:
        oneOf:
          - type: string
            description: Withdrawal credentials (32 bytes; 0x-prefixed hex with 64 hex characters).
            pattern: '^0x[a-fA-F0-9]{64}$'
            example: '0x01000000000000000000000026e8ce0d6c1424566ff8d584d1409b9fe651f27d'
          - $ref: '../components/schemas/primitives.EthAddress.yaml'
    - name: limit
      in: query
      description: >-
        Maximum number of validators to return. Defaults to 10. Allowed range is
        1 to 200 for standard users; higher limits may be available to premium
        accounts.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 10
        example: 100
    - name: offset
      in: query
      description: Number of items to skip from the start of the result set. Use 0 for the first page.
      required: false
      style: form
      explode: true
      schema:
        type: integer
        minimum: 0
        default: 0
        example: 0
  responses:
    '200':
      description: >-
        Matching validators were found. The `data` array contains one entry per
        validator whose withdrawal credentials equal the derived or provided
        value.
      content:
        application/json:
          schema:
            allOf:
              - $ref: ../components/schemas/types.ApiResponse.yaml
              - type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: ../components/schemas/types.ApiWithdrawalCredentialsResponse.yaml
    '400':
      description: The request is invalid (for example, malformed credentials/address or database error).
      content:
        application/json:
          schema:
            $ref: ../components/schemas/types.ApiErrorResponse.yaml
          examples:
            invalidParam:
              summary: Invalid withdrawal credentials or address
              value:
                status: "ERROR: invalid withdrawal credentials or eth1 address provided"
                data: null
            dbError:
              summary: Database retrieval error
              value:
                status: "ERROR: could not retrieve db results"
                data: null
    '500':
      description: An unexpected server error occurred while processing your request.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/types.ApiErrorResponse.yaml
          examples:
            serverError:
              summary: Internal error
              value:
                status: "ERROR: internal server error"
                data: null
