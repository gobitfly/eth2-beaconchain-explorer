/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api-keys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all API keys */
        get: operations["GetAPIKeys"];
        put?: never;
        /** Create a new API key */
        post: operations["CreateAPIKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api-keys/{name}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a specific API key */
        get: operations["GetAPIKey"];
        put?: never;
        post?: never;
        /** Delete an API key */
        delete: operations["DeleteAPIKey"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api-keys/{name}/disable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Disable an API key */
        post: operations["DisableAPIKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api-keys/{name}/enable": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Enable an API key */
        post: operations["EnableAPIKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CreateAPIKeyBody: {
            /** @description API key name (3-35 chars, alphanumeric, _, ., -) */
            name: string;
        };
        CreateAPIKeyData: {
            /**
             * @description Full API key (only returned once)
             * @example abc123xyz456abc123xyz456
             */
            raw_api_key?: string;
            api_key?: components["schemas"]["APIKey"];
        };
        DisableAPIKeyData: {
            api_key?: components["schemas"]["APIKey"];
        };
        EnableAPIKeyData: {
            api_key?: components["schemas"]["APIKey"];
        };
        GetAPIKeysData: {
            api_keys: components["schemas"]["APIKey"][];
        };
        GetAPIKeyData: {
            api_key?: components["schemas"]["APIKey"];
        };
        APIKey: {
            /**
             * @description The name of the API key.
             * @example my-api-key
             */
            name: string;
            /**
             * @description First 3 and last 3 characters of the raw API-key, separated by ...
             * @example abc...xyz
             */
            short_key: string;
            /**
             * Format: date-time
             * @description Creation time in RFC 3339 format (ISO 8601).
             * @example 2025-10-14T12:26:50.123Z
             */
            created_at: string;
            /**
             * Format: date-time
             * @description Last used time in RFC 3339 format (ISO 8601).
             * @example 2025-10-14T12:26:50.123Z
             */
            last_used_at?: string | null;
            /**
             * Format: date-time
             * @description Disabled time in RFC 3339 format (ISO 8601).
             * @example 2025-10-14T12:26:50.123Z
             */
            disabled_at?: string | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetAPIKeys: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of API keys */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAPIKeysData"];
                };
            };
        };
    };
    CreateAPIKey: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateAPIKeyBody"];
            };
        };
        responses: {
            /** @description Successfully created API key */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["CreateAPIKeyData"];
                };
            };
        };
    };
    GetAPIKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Retrieved API key */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetAPIKeyData"];
                };
            };
        };
    };
    DeleteAPIKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description API key deleted successfully */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    DisableAPIKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description API key disabled */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DisableAPIKeyData"];
                };
            };
        };
    };
    EnableAPIKey: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                name: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description API key enabled */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnableAPIKeyData"];
                };
            };
        };
    };
}
